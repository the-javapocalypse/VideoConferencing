/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';
import { ChangeDetectorRef, EventEmitter, TemplateRef } from '@angular/core';
import { NgClassInterface, NgStyleInterface, NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';
import { NzTooltipTrigger } from '../nz-tooltip.definitions';
/**
 * Tooltip component. Also the base component for legacy components.
 */
import * as ɵngcc0 from '@angular/core';
export declare abstract class NzTooltipBaseComponent {
    cdr: ChangeDetectorRef;
    noAnimation?: NzNoAnimationDirective | undefined;
    nzTitle: NzTSType | null;
    nzContent: NzTSType | null;
    nzVisible: boolean;
    nzPlacement: string;
    nzOverlayClassName: string;
    nzOverlayStyle: NgStyleInterface;
    nzMouseEnterDelay: number;
    nzMouseLeaveDelay: number;
    nzTrigger: NzTooltipTrigger;
    nzTitleTemplate: TemplateRef<void>;
    nzContentTemplate: TemplateRef<void>;
    readonly nzVisibleChange: EventEmitter<boolean>;
    overlay: CdkConnectedOverlay;
    origin: CdkOverlayOrigin;
    _classMap: NgClassInterface;
    _hasBackdrop: boolean;
    _prefix: string;
    _visible: boolean;
    _positions: ConnectionPositionPair[];
    _placement: string;
    _trigger: NzTooltipTrigger;
    readonly content: string | TemplateRef<void> | null;
    readonly title: string | TemplateRef<void> | null;
    constructor(cdr: ChangeDetectorRef, noAnimation?: NzNoAnimationDirective | undefined);
    show(): void;
    hide(): void;
    updateByDirective(): void;
    /**
     * Force the component to update its position.
     */
    updatePosition(): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    setClassMap(): void;
    setOverlayOrigin(origin: CdkOverlayOrigin): void;
    private isTitleEmpty;
    private isContentEmpty;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTooltipBaseComponent>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NzTooltipBaseComponent, never, never, {}, {
    "nzVisibleChange": "nzVisibleChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotdG9vbHRpcC1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuei10b29sdGlwLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDZGtDb25uZWN0ZWRPdmVybGF5LCBDZGtPdmVybGF5T3JpZ2luLCBDb25uZWN0ZWRPdmVybGF5UG9zaXRpb25DaGFuZ2UsIENvbm5lY3Rpb25Qb3NpdGlvblBhaXIgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDbGFzc0ludGVyZmFjZSwgTmdTdHlsZUludGVyZmFjZSwgTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSwgTnpUU1R5cGUgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUnO1xuaW1wb3J0IHsgTnpUb29sdGlwVHJpZ2dlciB9IGZyb20gJy4uL256LXRvb2x0aXAuZGVmaW5pdGlvbnMnO1xuLyoqXG4gKiBUb29sdGlwIGNvbXBvbmVudC4gQWxzbyB0aGUgYmFzZSBjb21wb25lbnQgZm9yIGxlZ2FjeSBjb21wb25lbnRzLlxuICovXG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBOelRvb2x0aXBCYXNlQ29tcG9uZW50IHtcbiAgICBjZHI6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIG5vQW5pbWF0aW9uPzogTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSB8IHVuZGVmaW5lZDtcbiAgICBuelRpdGxlOiBOelRTVHlwZSB8IG51bGw7XG4gICAgbnpDb250ZW50OiBOelRTVHlwZSB8IG51bGw7XG4gICAgbnpWaXNpYmxlOiBib29sZWFuO1xuICAgIG56UGxhY2VtZW50OiBzdHJpbmc7XG4gICAgbnpPdmVybGF5Q2xhc3NOYW1lOiBzdHJpbmc7XG4gICAgbnpPdmVybGF5U3R5bGU6IE5nU3R5bGVJbnRlcmZhY2U7XG4gICAgbnpNb3VzZUVudGVyRGVsYXk6IG51bWJlcjtcbiAgICBuek1vdXNlTGVhdmVEZWxheTogbnVtYmVyO1xuICAgIG56VHJpZ2dlcjogTnpUb29sdGlwVHJpZ2dlcjtcbiAgICBuelRpdGxlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIG56Q29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICByZWFkb25seSBuelZpc2libGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBvdmVybGF5OiBDZGtDb25uZWN0ZWRPdmVybGF5O1xuICAgIG9yaWdpbjogQ2RrT3ZlcmxheU9yaWdpbjtcbiAgICBfY2xhc3NNYXA6IE5nQ2xhc3NJbnRlcmZhY2U7XG4gICAgX2hhc0JhY2tkcm9wOiBib29sZWFuO1xuICAgIF9wcmVmaXg6IHN0cmluZztcbiAgICBfdmlzaWJsZTogYm9vbGVhbjtcbiAgICBfcG9zaXRpb25zOiBDb25uZWN0aW9uUG9zaXRpb25QYWlyW107XG4gICAgX3BsYWNlbWVudDogc3RyaW5nO1xuICAgIF90cmlnZ2VyOiBOelRvb2x0aXBUcmlnZ2VyO1xuICAgIHJlYWRvbmx5IGNvbnRlbnQ6IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+IHwgbnVsbDtcbiAgICByZWFkb25seSB0aXRsZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8dm9pZD4gfCBudWxsO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIG5vQW5pbWF0aW9uPzogTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSB8IHVuZGVmaW5lZCk7XG4gICAgc2hvdygpOiB2b2lkO1xuICAgIGhpZGUoKTogdm9pZDtcbiAgICB1cGRhdGVCeURpcmVjdGl2ZSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEZvcmNlIHRoZSBjb21wb25lbnQgdG8gdXBkYXRlIGl0cyBwb3NpdGlvbi5cbiAgICAgKi9cbiAgICB1cGRhdGVQb3NpdGlvbigpOiB2b2lkO1xuICAgIG9uUG9zaXRpb25DaGFuZ2UocG9zaXRpb246IENvbm5lY3RlZE92ZXJsYXlQb3NpdGlvbkNoYW5nZSk6IHZvaWQ7XG4gICAgc2V0Q2xhc3NNYXAoKTogdm9pZDtcbiAgICBzZXRPdmVybGF5T3JpZ2luKG9yaWdpbjogQ2RrT3ZlcmxheU9yaWdpbik6IHZvaWQ7XG4gICAgcHJpdmF0ZSBpc1RpdGxlRW1wdHk7XG4gICAgcHJpdmF0ZSBpc0NvbnRlbnRFbXB0eTtcbn1cbiJdfQ==