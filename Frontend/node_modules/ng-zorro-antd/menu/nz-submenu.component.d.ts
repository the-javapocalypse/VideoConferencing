/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CdkConnectedOverlay, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';
import { Platform } from '@angular/cdk/platform';
import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, QueryList, SimpleChanges, TemplateRef } from '@angular/core';
import { NzMenuBaseService, NzNoAnimationDirective, NzUpdateHostClassService } from 'ng-zorro-antd/core';
import { NzMenuItemDirective } from './nz-menu-item.directive';
import { NzSubmenuService } from './nz-submenu.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzSubMenuComponent implements OnInit, OnDestroy, AfterContentInit, OnChanges {
    private elementRef;
    nzMenuService: NzMenuBaseService;
    private cdr;
    nzSubmenuService: NzSubmenuService;
    private nzUpdateHostClassService;
    private platform;
    noAnimation?: NzNoAnimationDirective | undefined;
    nzMenuClassName: string;
    nzPaddingLeft: number;
    nzTitle: string | TemplateRef<void>;
    nzIcon: string;
    nzOpen: boolean;
    nzDisabled: boolean;
    readonly nzOpenChange: EventEmitter<boolean>;
    cdkConnectedOverlay: CdkConnectedOverlay;
    cdkOverlayOrigin: ElementRef;
    listOfNzSubMenuComponent: QueryList<NzSubMenuComponent>;
    listOfNzMenuItemDirective: QueryList<NzMenuItemDirective>;
    placement: string;
    triggerWidth: number;
    expandState: string;
    overlayPositions: import("@angular/cdk/overlay").ConnectionPositionPair[];
    private destroy$;
    private isChildMenuSelected;
    private isMouseHover;
    setOpenState(open: boolean): void;
    clickSubMenuTitle(): void;
    setMouseEnterState(value: boolean): void;
    setTriggerWidth(): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    setClassMap(): void;
    constructor(elementRef: ElementRef, nzMenuService: NzMenuBaseService, cdr: ChangeDetectorRef, nzSubmenuService: NzSubmenuService, nzUpdateHostClassService: NzUpdateHostClassService, platform: Platform, noAnimation?: NzNoAnimationDirective | undefined);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSubMenuComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSubMenuComponent, "[nz-submenu]", ["nzSubmenu"], {
    "nzOpen": "nzOpen";
    "nzDisabled": "nzDisabled";
    "nzMenuClassName": "nzMenuClassName";
    "nzPaddingLeft": "nzPaddingLeft";
    "nzTitle": "nzTitle";
    "nzIcon": "nzIcon";
}, {
    "nzOpenChange": "nzOpenChange";
}, ["listOfNzSubMenuComponent", "listOfNzMenuItemDirective"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotc3VibWVudS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibnotc3VibWVudS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFhQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDZGtDb25uZWN0ZWRPdmVybGF5LCBDb25uZWN0ZWRPdmVybGF5UG9zaXRpb25DaGFuZ2UgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBRdWVyeUxpc3QsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOek1lbnVCYXNlU2VydmljZSwgTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSwgTnpVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlJztcbmltcG9ydCB7IE56TWVudUl0ZW1EaXJlY3RpdmUgfSBmcm9tICcuL256LW1lbnUtaXRlbS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgTnpTdWJtZW51U2VydmljZSB9IGZyb20gJy4vbnotc3VibWVudS5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56U3ViTWVudUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBBZnRlckNvbnRlbnRJbml0LCBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBuek1lbnVTZXJ2aWNlOiBOek1lbnVCYXNlU2VydmljZTtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBuelN1Ym1lbnVTZXJ2aWNlOiBOelN1Ym1lbnVTZXJ2aWNlO1xuICAgIHByaXZhdGUgbnpVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlO1xuICAgIHByaXZhdGUgcGxhdGZvcm07XG4gICAgbm9BbmltYXRpb24/OiBOek5vQW5pbWF0aW9uRGlyZWN0aXZlIHwgdW5kZWZpbmVkO1xuICAgIG56TWVudUNsYXNzTmFtZTogc3RyaW5nO1xuICAgIG56UGFkZGluZ0xlZnQ6IG51bWJlcjtcbiAgICBuelRpdGxlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBuekljb246IHN0cmluZztcbiAgICBuek9wZW46IGJvb2xlYW47XG4gICAgbnpEaXNhYmxlZDogYm9vbGVhbjtcbiAgICByZWFkb25seSBuek9wZW5DaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBjZGtDb25uZWN0ZWRPdmVybGF5OiBDZGtDb25uZWN0ZWRPdmVybGF5O1xuICAgIGNka092ZXJsYXlPcmlnaW46IEVsZW1lbnRSZWY7XG4gICAgbGlzdE9mTnpTdWJNZW51Q29tcG9uZW50OiBRdWVyeUxpc3Q8TnpTdWJNZW51Q29tcG9uZW50PjtcbiAgICBsaXN0T2ZOek1lbnVJdGVtRGlyZWN0aXZlOiBRdWVyeUxpc3Q8TnpNZW51SXRlbURpcmVjdGl2ZT47XG4gICAgcGxhY2VtZW50OiBzdHJpbmc7XG4gICAgdHJpZ2dlcldpZHRoOiBudW1iZXI7XG4gICAgZXhwYW5kU3RhdGU6IHN0cmluZztcbiAgICBvdmVybGF5UG9zaXRpb25zOiBpbXBvcnQoXCJAYW5ndWxhci9jZGsvb3ZlcmxheVwiKS5Db25uZWN0aW9uUG9zaXRpb25QYWlyW107XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBwcml2YXRlIGlzQ2hpbGRNZW51U2VsZWN0ZWQ7XG4gICAgcHJpdmF0ZSBpc01vdXNlSG92ZXI7XG4gICAgc2V0T3BlblN0YXRlKG9wZW46IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNsaWNrU3ViTWVudVRpdGxlKCk6IHZvaWQ7XG4gICAgc2V0TW91c2VFbnRlclN0YXRlKHZhbHVlOiBib29sZWFuKTogdm9pZDtcbiAgICBzZXRUcmlnZ2VyV2lkdGgoKTogdm9pZDtcbiAgICBvblBvc2l0aW9uQ2hhbmdlKHBvc2l0aW9uOiBDb25uZWN0ZWRPdmVybGF5UG9zaXRpb25DaGFuZ2UpOiB2b2lkO1xuICAgIHNldENsYXNzTWFwKCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZiwgbnpNZW51U2VydmljZTogTnpNZW51QmFzZVNlcnZpY2UsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIG56U3VibWVudVNlcnZpY2U6IE56U3VibWVudVNlcnZpY2UsIG56VXBkYXRlSG9zdENsYXNzU2VydmljZTogTnpVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlLCBwbGF0Zm9ybTogUGxhdGZvcm0sIG5vQW5pbWF0aW9uPzogTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSB8IHVuZGVmaW5lZCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19