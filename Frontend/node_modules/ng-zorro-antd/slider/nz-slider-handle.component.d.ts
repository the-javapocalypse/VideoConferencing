/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { NgStyleInterface } from 'ng-zorro-antd/core';
import { NzTooltipDirective } from 'ng-zorro-antd/tooltip';
import { SliderShowTooltip } from './nz-slider-definitions';
import { NzSliderComponent } from './nz-slider.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzSliderHandleComponent implements OnChanges, OnDestroy {
    private sliderComponent;
    private cdr;
    tooltip: NzTooltipDirective;
    nzVertical: string;
    nzOffset: number;
    nzValue: number;
    nzTooltipVisible: SliderShowTooltip;
    nzTooltipPlacement: string;
    nzTipFormatter: (value: number) => string;
    nzActive: boolean;
    tooltipTitle: string;
    style: NgStyleInterface;
    private hovers_;
    constructor(sliderComponent: NzSliderComponent, cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    enterHandle: () => void;
    leaveHandle: () => void;
    private toggleTooltip;
    private updateTooltipTitle;
    private updateTooltipPosition;
    private updateStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSliderHandleComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSliderHandleComponent, "nz-slider-handle", ["nzSliderHandle"], {
    "nzTooltipVisible": "nzTooltipVisible";
    "nzActive": "nzActive";
    "nzVertical": "nzVertical";
    "nzOffset": "nzOffset";
    "nzValue": "nzValue";
    "nzTooltipPlacement": "nzTooltipPlacement";
    "nzTipFormatter": "nzTipFormatter";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotc2xpZGVyLWhhbmRsZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibnotc2xpZGVyLWhhbmRsZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztBQVlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdTdHlsZUludGVyZmFjZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZSc7XG5pbXBvcnQgeyBOelRvb2x0aXBEaXJlY3RpdmUgfSBmcm9tICduZy16b3Jyby1hbnRkL3Rvb2x0aXAnO1xuaW1wb3J0IHsgU2xpZGVyU2hvd1Rvb2x0aXAgfSBmcm9tICcuL256LXNsaWRlci1kZWZpbml0aW9ucyc7XG5pbXBvcnQgeyBOelNsaWRlckNvbXBvbmVudCB9IGZyb20gJy4vbnotc2xpZGVyLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelNsaWRlckhhbmRsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHNsaWRlckNvbXBvbmVudDtcbiAgICBwcml2YXRlIGNkcjtcbiAgICB0b29sdGlwOiBOelRvb2x0aXBEaXJlY3RpdmU7XG4gICAgbnpWZXJ0aWNhbDogc3RyaW5nO1xuICAgIG56T2Zmc2V0OiBudW1iZXI7XG4gICAgbnpWYWx1ZTogbnVtYmVyO1xuICAgIG56VG9vbHRpcFZpc2libGU6IFNsaWRlclNob3dUb29sdGlwO1xuICAgIG56VG9vbHRpcFBsYWNlbWVudDogc3RyaW5nO1xuICAgIG56VGlwRm9ybWF0dGVyOiAodmFsdWU6IG51bWJlcikgPT4gc3RyaW5nO1xuICAgIG56QWN0aXZlOiBib29sZWFuO1xuICAgIHRvb2x0aXBUaXRsZTogc3RyaW5nO1xuICAgIHN0eWxlOiBOZ1N0eWxlSW50ZXJmYWNlO1xuICAgIHByaXZhdGUgaG92ZXJzXztcbiAgICBjb25zdHJ1Y3RvcihzbGlkZXJDb21wb25lbnQ6IE56U2xpZGVyQ29tcG9uZW50LCBjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGVudGVySGFuZGxlOiAoKSA9PiB2b2lkO1xuICAgIGxlYXZlSGFuZGxlOiAoKSA9PiB2b2lkO1xuICAgIHByaXZhdGUgdG9nZ2xlVG9vbHRpcDtcbiAgICBwcml2YXRlIHVwZGF0ZVRvb2x0aXBUaXRsZTtcbiAgICBwcml2YXRlIHVwZGF0ZVRvb2x0aXBQb3NpdGlvbjtcbiAgICBwcml2YXRlIHVwZGF0ZVN0eWxlO1xufVxuIl19