{"version":3,"file":"ng-zorro-antd-checkbox.js","sources":["ng:/ng-zorro-antd/checkbox/nz-checkbox-wrapper.component.ts","ng:/ng-zorro-antd/checkbox/nz-checkbox.component.ts","ng:/ng-zorro-antd/checkbox/nz-checkbox-group.component.ts","ng:/ng-zorro-antd/checkbox/nz-checkbox.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Output,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzCheckboxComponent } from './nz-checkbox.component';\n\n@Component({\n  selector: 'nz-checkbox-wrapper',\n  exportAs: 'nzCheckboxWrapper',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-checkbox-wrapper.component.html'\n})\nexport class NzCheckboxWrapperComponent {\n  @Output() readonly nzOnChange = new EventEmitter<string[]>();\n  private checkboxList: NzCheckboxComponent[] = [];\n\n  addCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.push(value);\n  }\n\n  removeCheckbox(value: NzCheckboxComponent): void {\n    this.checkboxList.splice(this.checkboxList.indexOf(value), 1);\n  }\n\n  outputValue(): string[] {\n    const checkedList = this.checkboxList.filter(item => item.nzChecked);\n    return checkedList.map(item => item.nzValue);\n  }\n\n  onChange(): void {\n    this.nzOnChange.emit(this.outputValue());\n  }\n\n  constructor(renderer: Renderer2, elementRef: ElementRef) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  forwardRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { isEmpty, InputBoolean } from 'ng-zorro-antd/core';\n\nimport { NzCheckboxWrapperComponent } from './nz-checkbox-wrapper.component';\n\n@Component({\n  selector: '[nz-checkbox]',\n  exportAs: 'nzCheckbox',\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-checkbox.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxComponent),\n      multi: true\n    }\n  ],\n  host: {\n    '(click)': 'hostClick($event)'\n  }\n})\nexport class NzCheckboxComponent implements OnInit, ControlValueAccessor, OnChanges, AfterViewInit, OnDestroy {\n  // tslint:disable-next-line:no-any\n  onChange: (value: any) => void = () => null;\n  // tslint:disable-next-line:no-any\n  onTouched: () => any = () => null;\n  @ViewChild('inputElement', { static: true }) private inputElement: ElementRef;\n  @ViewChild('contentElement', { static: false }) private contentElement: ElementRef;\n  @Output() readonly nzCheckedChange = new EventEmitter<boolean>();\n  @Input() nzValue: string;\n  @Input() @InputBoolean() nzAutoFocus = false;\n  @Input() @InputBoolean() nzDisabled = false;\n  @Input() @InputBoolean() nzIndeterminate = false;\n  @Input() @InputBoolean() nzChecked = false;\n\n  hostClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.focus();\n    this.innerCheckedChange(!this.nzChecked);\n  }\n\n  innerCheckedChange(checked: boolean): void {\n    if (!this.nzDisabled) {\n      this.nzChecked = checked;\n      this.onChange(this.nzChecked);\n      this.nzCheckedChange.emit(this.nzChecked);\n      if (this.nzCheckboxWrapperComponent) {\n        this.nzCheckboxWrapperComponent.onChange();\n      }\n    }\n  }\n\n  updateAutoFocus(): void {\n    if (this.inputElement && this.nzAutoFocus) {\n      this.renderer.setAttribute(this.inputElement.nativeElement, 'autofocus', 'autofocus');\n    } else {\n      this.renderer.removeAttribute(this.inputElement.nativeElement, 'autofocus');\n    }\n  }\n\n  writeValue(value: boolean): void {\n    this.nzChecked = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: boolean) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n\n  focus(): void {\n    this.focusMonitor.focusVia(this.inputElement, 'keyboard');\n  }\n\n  blur(): void {\n    this.inputElement.nativeElement.blur();\n  }\n\n  checkContent(): void {\n    if (isEmpty(this.contentElement.nativeElement)) {\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\n    } else {\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Optional() private nzCheckboxWrapperComponent: NzCheckboxWrapperComponent,\n    private cdr: ChangeDetectorRef,\n    private focusMonitor: FocusMonitor\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-wrapper');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.addCheckbox(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzAutoFocus) {\n      this.updateAutoFocus();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.updateAutoFocus();\n    this.checkContent();\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n    if (this.nzCheckboxWrapperComponent) {\n      this.nzCheckboxWrapperComponent.removeCheckbox(this);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n  forwardRef,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { InputBoolean } from 'ng-zorro-antd/core';\n\nexport interface NzCheckBoxOptionInterface {\n  label: string;\n  value: string;\n  checked?: boolean;\n  disabled?: boolean;\n}\n\n@Component({\n  selector: 'nz-checkbox-group',\n  exportAs: 'nzCheckboxGroup',\n  preserveWhitespaces: false,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-checkbox-group.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NzCheckboxGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class NzCheckboxGroupComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  // tslint:disable-next-line:no-any\n  onChange: (value: any) => void = () => null;\n  // tslint:disable-next-line:no-any\n  onTouched: () => any = () => null;\n  options: NzCheckBoxOptionInterface[] = [];\n  @Input() @InputBoolean() nzDisabled = false;\n\n  onOptionChange(): void {\n    this.onChange(this.options);\n  }\n\n  trackByOption(_index: number, option: NzCheckBoxOptionInterface): string {\n    return option.value;\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private focusMonitor: FocusMonitor,\n    private cdr: ChangeDetectorRef,\n    renderer: Renderer2\n  ) {\n    renderer.addClass(elementRef.nativeElement, 'ant-checkbox-group');\n  }\n\n  ngOnInit(): void {\n    this.focusMonitor.monitor(this.elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        Promise.resolve().then(() => this.onTouched());\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  writeValue(value: NzCheckBoxOptionInterface[]): void {\n    this.options = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (_: NzCheckBoxOptionInterface[]) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.nzDisabled = isDisabled;\n    this.cdr.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzCheckboxGroupComponent } from './nz-checkbox-group.component';\nimport { NzCheckboxWrapperComponent } from './nz-checkbox-wrapper.component';\nimport { NzCheckboxComponent } from './nz-checkbox.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ObserversModule],\n  declarations: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent],\n  exports: [NzCheckboxComponent, NzCheckboxGroupComponent, NzCheckboxWrapperComponent]\n})\nexport class NzCheckboxModule {}\n"]}