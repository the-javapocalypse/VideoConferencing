/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { MediaMatcher } from '@angular/cdk/layout';
import { Platform } from '@angular/cdk/platform';
import { NzBreakPoint, NzDomEventService } from 'ng-zorro-antd/core';
import { NzLayoutComponent } from './nz-layout.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzSiderComponent implements OnInit, AfterViewInit, OnDestroy {
    private nzLayoutComponent;
    private mediaMatcher;
    private ngZone;
    private platform;
    private cdr;
    private nzDomEventService;
    private below;
    private destroy$;
    private dimensionMap;
    readonly nzCollapsedChange: EventEmitter<any>;
    nzWidth: string | number;
    nzTheme: 'light' | 'dark';
    nzCollapsedWidth: number;
    nzBreakpoint: NzBreakPoint;
    nzZeroTrigger: TemplateRef<void>;
    nzReverseArrow: boolean;
    nzCollapsible: boolean;
    nzCollapsed: boolean;
    nzTrigger: TemplateRef<void>;
    defaultTrigger: TemplateRef<void>;
    readonly trigger: TemplateRef<void>;
    readonly flexSetting: string;
    readonly widthSetting: string;
    watchMatchMedia(): void;
    toggleCollapse(): void;
    readonly isZeroTrigger: boolean;
    readonly isSiderTrigger: boolean;
    constructor(nzLayoutComponent: NzLayoutComponent, mediaMatcher: MediaMatcher, ngZone: NgZone, platform: Platform, cdr: ChangeDetectorRef, nzDomEventService: NzDomEventService, renderer: Renderer2, elementRef: ElementRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSiderComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSiderComponent, "nz-sider", ["nzSider"], {
    "nzWidth": "nzWidth";
    "nzTheme": "nzTheme";
    "nzCollapsedWidth": "nzCollapsedWidth";
    "nzReverseArrow": "nzReverseArrow";
    "nzCollapsible": "nzCollapsible";
    "nzCollapsed": "nzCollapsed";
    "nzBreakpoint": "nzBreakpoint";
    "nzZeroTrigger": "nzZeroTrigger";
    "nzTrigger": "nzTrigger";
}, {
    "nzCollapsedChange": "nzCollapsedChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotc2lkZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm56LXNpZGVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1lZGlhTWF0Y2hlciB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9sYXlvdXQnO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgTnpCcmVha1BvaW50LCBOekRvbUV2ZW50U2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZSc7XG5pbXBvcnQgeyBOekxheW91dENvbXBvbmVudCB9IGZyb20gJy4vbnotbGF5b3V0LmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelNpZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgbnpMYXlvdXRDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSBtZWRpYU1hdGNoZXI7XG4gICAgcHJpdmF0ZSBuZ1pvbmU7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybTtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBwcml2YXRlIG56RG9tRXZlbnRTZXJ2aWNlO1xuICAgIHByaXZhdGUgYmVsb3c7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBwcml2YXRlIGRpbWVuc2lvbk1hcDtcbiAgICByZWFkb25seSBuekNvbGxhcHNlZENoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgbnpXaWR0aDogc3RyaW5nIHwgbnVtYmVyO1xuICAgIG56VGhlbWU6ICdsaWdodCcgfCAnZGFyayc7XG4gICAgbnpDb2xsYXBzZWRXaWR0aDogbnVtYmVyO1xuICAgIG56QnJlYWtwb2ludDogTnpCcmVha1BvaW50O1xuICAgIG56WmVyb1RyaWdnZXI6IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIG56UmV2ZXJzZUFycm93OiBib29sZWFuO1xuICAgIG56Q29sbGFwc2libGU6IGJvb2xlYW47XG4gICAgbnpDb2xsYXBzZWQ6IGJvb2xlYW47XG4gICAgbnpUcmlnZ2VyOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBkZWZhdWx0VHJpZ2dlcjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgcmVhZG9ubHkgdHJpZ2dlcjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgcmVhZG9ubHkgZmxleFNldHRpbmc6IHN0cmluZztcbiAgICByZWFkb25seSB3aWR0aFNldHRpbmc6IHN0cmluZztcbiAgICB3YXRjaE1hdGNoTWVkaWEoKTogdm9pZDtcbiAgICB0b2dnbGVDb2xsYXBzZSgpOiB2b2lkO1xuICAgIHJlYWRvbmx5IGlzWmVyb1RyaWdnZXI6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgaXNTaWRlclRyaWdnZXI6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IobnpMYXlvdXRDb21wb25lbnQ6IE56TGF5b3V0Q29tcG9uZW50LCBtZWRpYU1hdGNoZXI6IE1lZGlhTWF0Y2hlciwgbmdab25lOiBOZ1pvbmUsIHBsYXRmb3JtOiBQbGF0Zm9ybSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgbnpEb21FdmVudFNlcnZpY2U6IE56RG9tRXZlbnRTZXJ2aWNlLCByZW5kZXJlcjogUmVuZGVyZXIyLCBlbGVtZW50UmVmOiBFbGVtZW50UmVmKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=