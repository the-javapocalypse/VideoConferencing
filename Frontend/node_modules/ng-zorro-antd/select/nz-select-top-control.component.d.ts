/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { NzNoAnimationDirective } from 'ng-zorro-antd/core';
import { NzOptionComponent } from './nz-option.component';
import { NzSelectService } from './nz-select.service';
import * as ɵngcc0 from '@angular/core';
export declare class NzSelectTopControlComponent implements OnInit, OnDestroy {
    private renderer;
    nzSelectService: NzSelectService;
    private cdr;
    noAnimation?: NzNoAnimationDirective | undefined;
    inputValue: string;
    isComposing: boolean;
    private destroy$;
    inputElement: ElementRef;
    mirrorElement: ElementRef;
    nzShowSearch: boolean;
    nzPlaceHolder: string;
    nzOpen: boolean;
    nzMaxTagCount: number;
    nzAllowClear: boolean;
    nzShowArrow: boolean;
    nzLoading: boolean;
    nzCustomTemplate: TemplateRef<{
        $implicit: NzOptionComponent;
    }>;
    nzSuffixIcon: TemplateRef<void>;
    nzClearIcon: TemplateRef<void>;
    nzRemoveIcon: TemplateRef<void>;
    nzMaxTagPlaceholder: TemplateRef<{
        $implicit: any[];
    }>;
    nzTokenSeparators: string[];
    onClearSelection(e: MouseEvent): void;
    setInputValue(value: string): void;
    readonly mirrorDOM: HTMLElement;
    readonly inputDOM: HTMLInputElement;
    readonly placeHolderDisplay: string;
    readonly selectedValueStyle: {
        [key: string]: string;
    };
    trackValue(_index: number, option: NzOptionComponent): any;
    updateWidth(): void;
    removeSelectedValue(option: NzOptionComponent, e: MouseEvent): void;
    animationEnd(): void;
    constructor(renderer: Renderer2, nzSelectService: NzSelectService, cdr: ChangeDetectorRef, noAnimation?: NzNoAnimationDirective | undefined);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSelectTopControlComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSelectTopControlComponent, "[nz-select-top-control]", ["nzSelectTopControl"], {
    "nzShowSearch": "nzShowSearch";
    "nzOpen": "nzOpen";
    "nzAllowClear": "nzAllowClear";
    "nzShowArrow": "nzShowArrow";
    "nzLoading": "nzLoading";
    "nzTokenSeparators": "nzTokenSeparators";
    "nzPlaceHolder": "nzPlaceHolder";
    "nzMaxTagCount": "nzMaxTagCount";
    "nzCustomTemplate": "nzCustomTemplate";
    "nzSuffixIcon": "nzSuffixIcon";
    "nzClearIcon": "nzClearIcon";
    "nzRemoveIcon": "nzRemoveIcon";
    "nzMaxTagPlaceholder": "nzMaxTagPlaceholder";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnotc2VsZWN0LXRvcC1jb250cm9sLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJuei1zZWxlY3QtdG9wLWNvbnRyb2wuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMENBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56Tm9BbmltYXRpb25EaXJlY3RpdmUgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUnO1xuaW1wb3J0IHsgTnpPcHRpb25Db21wb25lbnQgfSBmcm9tICcuL256LW9wdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTnpTZWxlY3RTZXJ2aWNlIH0gZnJvbSAnLi9uei1zZWxlY3Quc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelNlbGVjdFRvcENvbnRyb2xDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBuelNlbGVjdFNlcnZpY2U6IE56U2VsZWN0U2VydmljZTtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBub0FuaW1hdGlvbj86IE56Tm9BbmltYXRpb25EaXJlY3RpdmUgfCB1bmRlZmluZWQ7XG4gICAgaW5wdXRWYWx1ZTogc3RyaW5nO1xuICAgIGlzQ29tcG9zaW5nOiBib29sZWFuO1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIG1pcnJvckVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgbnpTaG93U2VhcmNoOiBib29sZWFuO1xuICAgIG56UGxhY2VIb2xkZXI6IHN0cmluZztcbiAgICBuek9wZW46IGJvb2xlYW47XG4gICAgbnpNYXhUYWdDb3VudDogbnVtYmVyO1xuICAgIG56QWxsb3dDbGVhcjogYm9vbGVhbjtcbiAgICBuelNob3dBcnJvdzogYm9vbGVhbjtcbiAgICBuekxvYWRpbmc6IGJvb2xlYW47XG4gICAgbnpDdXN0b21UZW1wbGF0ZTogVGVtcGxhdGVSZWY8e1xuICAgICAgICAkaW1wbGljaXQ6IE56T3B0aW9uQ29tcG9uZW50O1xuICAgIH0+O1xuICAgIG56U3VmZml4SWNvbjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgbnpDbGVhckljb246IFRlbXBsYXRlUmVmPHZvaWQ+O1xuICAgIG56UmVtb3ZlSWNvbjogVGVtcGxhdGVSZWY8dm9pZD47XG4gICAgbnpNYXhUYWdQbGFjZWhvbGRlcjogVGVtcGxhdGVSZWY8e1xuICAgICAgICAkaW1wbGljaXQ6IGFueVtdO1xuICAgIH0+O1xuICAgIG56VG9rZW5TZXBhcmF0b3JzOiBzdHJpbmdbXTtcbiAgICBvbkNsZWFyU2VsZWN0aW9uKGU6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHNldElucHV0VmFsdWUodmFsdWU6IHN0cmluZyk6IHZvaWQ7XG4gICAgcmVhZG9ubHkgbWlycm9yRE9NOiBIVE1MRWxlbWVudDtcbiAgICByZWFkb25seSBpbnB1dERPTTogSFRNTElucHV0RWxlbWVudDtcbiAgICByZWFkb25seSBwbGFjZUhvbGRlckRpc3BsYXk6IHN0cmluZztcbiAgICByZWFkb25seSBzZWxlY3RlZFZhbHVlU3R5bGU6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgdHJhY2tWYWx1ZShfaW5kZXg6IG51bWJlciwgb3B0aW9uOiBOek9wdGlvbkNvbXBvbmVudCk6IGFueTtcbiAgICB1cGRhdGVXaWR0aCgpOiB2b2lkO1xuICAgIHJlbW92ZVNlbGVjdGVkVmFsdWUob3B0aW9uOiBOek9wdGlvbkNvbXBvbmVudCwgZTogTW91c2VFdmVudCk6IHZvaWQ7XG4gICAgYW5pbWF0aW9uRW5kKCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgbnpTZWxlY3RTZXJ2aWNlOiBOelNlbGVjdFNlcnZpY2UsIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIG5vQW5pbWF0aW9uPzogTnpOb0FuaW1hdGlvbkRpcmVjdGl2ZSB8IHVuZGVmaW5lZCk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19